
 
name: CI - CD Build
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.8.2
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests # change location of pom.xml file   
      
        
      - name: Persistent workflow data as artificats 
        uses: actions/upload-artifact@v2
        with: 
          name: github-actions-artifact
          path: target
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_R }}
          password: ${{ secrets.DOCKERHUB_TOKEN_R }}

      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME_R }}/usermanagement:v1
          
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3          
          
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: my-ecr-repo
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
#      - name: Clone Repo files
#        run: |
#          sudo su - root << EOF  
#          cd /home/ && git clone https://github.com/niranjanmaradapu/usermanagement &&  cp  -rf /home/runner/work/usermanagement/usermanagement/target usermanagement  # Replace with Repository URL where war files have to save 
#          EOF
          
#       - uses: aws-actions/configure-aws-credentials@v1
#         with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-south-1
          
#      - name: Upload artifact to s3
#        run: aws s3 cp --recursive target s3://klm-otsi/
        
#      - name: Commit & Push changes
#        uses: Andro999b/push@v1.3
#        with:
#          github_token: ${{ secrets.PERSONAL_TOKEN }}
#          author_email: niranjan.maradapu@otsi.co.in 
#          repository: niranjanmaradapu/usermanagement
#          directory: /home/usermanagement/
          
        
          
     
